{"ast":null,"code":"/*requesting accessToken from yelp will be no more as of march 18, 2018. Instead we will be given api keys by yelp to be used here\n Authorization: `Bearer ${api-key-here}`\n */\nimport { clientId, secret } from './config.js';\nlet accessToken;\nconst Yelp = {\n  getAccessToken() {\n    if (accessToken) {\n      return new Promise(resolve => resolve(accessToken));\n    }\n\n    return fetch(\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/oauth2/token?grant_type=client_credentials&client_id=\".concat(clientId, \"&client_secret=\").concat(secret), {\n      method: 'POST'\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      accessToken = jsonResponse.access_token;\n    });\n  },\n\n  search(term, location, sortBy) {\n    return Yelp.getAccessToken().then(() => {\n      return fetch(\"https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=\".concat(term, \"&location=\").concat(location, \"&sort_by=\").concat(sortBy), {\n        headers: {\n          Authorization: \"Bearer \".concat(accessToken)\n        }\n      });\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n        console.log(jsonResponse.businesses);\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      }\n    });\n  }\n\n};\nexport default Yelp;","map":{"version":3,"sources":["C:/Users/ASUS PC/Downloads/Rav 4/Ravenous/src/util/Yelp.js"],"names":["clientId","secret","accessToken","Yelp","getAccessToken","Promise","resolve","fetch","method","then","response","json","jsonResponse","access_token","search","term","location","sortBy","headers","Authorization","businesses","console","log","map","business","id","imageSrc","image_url","name","address","address1","city","state","zipCode","zip_code","category","categories","title","rating","reviewCount","review_count"],"mappings":"AAAA;;;AAIA,SAASA,QAAT,EAAmBC,MAAnB,QAAiC,aAAjC;AACA,IAAIC,WAAJ;AAEA,MAAMC,IAAI,GAAG;AACXC,EAAAA,cAAc,GAAG;AACf,QAAIF,WAAJ,EAAiB;AACf,aAAO,IAAIG,OAAJ,CAAYC,OAAO,IAAIA,OAAO,CAACJ,WAAD,CAA9B,CAAP;AACD;;AACD,WAAOK,KAAK,yHAAkHP,QAAlH,4BAA4IC,MAA5I,GAAsJ;AAChKO,MAAAA,MAAM,EAAE;AADwJ,KAAtJ,CAAL,CAEJC,IAFI,CAECC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAJM,EAIJF,IAJI,CAICG,YAAY,IAAI;AACtBV,MAAAA,WAAW,GAAGU,YAAY,CAACC,YAA3B;AACD,KANM,CAAP;AAOD,GAZU;;AAcXC,EAAAA,MAAM,CAACC,IAAD,EAAOC,QAAP,EAAiBC,MAAjB,EAAyB;AAC7B,WAAOd,IAAI,CAACC,cAAL,GAAsBK,IAAtB,CAA2B,MAAM;AACtC,aAAOF,KAAK,8FAAuFQ,IAAvF,uBAAwGC,QAAxG,sBAA4HC,MAA5H,GAAsI;AAChJC,QAAAA,OAAO,EAAE;AACPC,UAAAA,aAAa,mBAAYjB,WAAZ;AADN;AADuI,OAAtI,CAAZ;AAKD,KANM,EAMJO,IANI,CAMCC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KARM,EAQJF,IARI,CAQCG,YAAY,IAAI;AACtB,UAAIA,YAAY,CAACQ,UAAjB,EAA6B;AACzBC,QAAAA,OAAO,CAACC,GAAR,CAAYV,YAAY,CAACQ,UAAzB;AACF,eAAOR,YAAY,CAACQ,UAAb,CAAwBG,GAAxB,CAA4BC,QAAQ,KAAK;AAC9CC,UAAAA,EAAE,EAAED,QAAQ,CAACC,EADiC;AAE9CC,UAAAA,QAAQ,EAAEF,QAAQ,CAACG,SAF2B;AAG9CC,UAAAA,IAAI,EAAEJ,QAAQ,CAACI,IAH+B;AAI9CC,UAAAA,OAAO,EAAEL,QAAQ,CAACR,QAAT,CAAkBc,QAJmB;AAK9CC,UAAAA,IAAI,EAAEP,QAAQ,CAACR,QAAT,CAAkBe,IALsB;AAM9CC,UAAAA,KAAK,EAAER,QAAQ,CAACR,QAAT,CAAkBgB,KANqB;AAO9CC,UAAAA,OAAO,EAAET,QAAQ,CAACR,QAAT,CAAkBkB,QAPmB;AAQ9CC,UAAAA,QAAQ,EAAEX,QAAQ,CAACY,UAAT,CAAoB,CAApB,EAAuBC,KARa;AAS9CC,UAAAA,MAAM,EAAEd,QAAQ,CAACc,MAT6B;AAU9CC,UAAAA,WAAW,EAAEf,QAAQ,CAACgB;AAVwB,SAAL,CAApC,CAAP;AAYD;AACF,KAxBM,CAAP;AAyBD;;AAxCU,CAAb;AA2CA,eAAerC,IAAf","sourcesContent":["/*requesting accessToken from yelp will be no more as of march 18, 2018. Instead we will be given api keys by yelp to be used here\n Authorization: `Bearer ${api-key-here}`\n */\n\nimport { clientId, secret } from './config.js';\nlet accessToken;\n\nconst Yelp = {\n  getAccessToken() {\n    if (accessToken) {\n      return new Promise(resolve => resolve(accessToken));\n    }\n    return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/oauth2/token?grant_type=client_credentials&client_id=${clientId}&client_secret=${secret}`, {\n      method: 'POST'\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      accessToken = jsonResponse.access_token;\n    });\n  },\n\n  search(term, location, sortBy) {\n    return Yelp.getAccessToken().then(() => {\n      return fetch(`https://cors-anywhere.herokuapp.com/https://api.yelp.com/v3/businesses/search?term=${term}&location=${location}&sort_by=${sortBy}`, {\n        headers: {\n          Authorization: `Bearer ${accessToken}`\n        }\n      });\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (jsonResponse.businesses) {\n          console.log(jsonResponse.businesses);\n        return jsonResponse.businesses.map(business => ({\n          id: business.id,\n          imageSrc: business.image_url,\n          name: business.name,\n          address: business.location.address1,\n          city: business.location.city,\n          state: business.location.state,\n          zipCode: business.location.zip_code,\n          category: business.categories[0].title,\n          rating: business.rating,\n          reviewCount: business.review_count\n        }));\n      } \n    });\n  }\n};\n\nexport default Yelp;\n"]},"metadata":{},"sourceType":"module"}